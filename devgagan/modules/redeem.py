from datetime import datetime, timedelta
import random
import redeem
import string
from pymongo import MongoClient
from config import MONGO_URL

# MongoDB рдХрдиреЗрдХреНрд╢рди рд╕реЗрдЯрдЕрдк рдХрд░реЗрдВ
client = MongoClient(MONGO_URL)
db = client["telegram_bot"]  # рдЕрдкрдирд╛ рдбреЗрдЯрд╛рдмреЗрд╕ рдирд╛рдо рдпрд╣рд╛рдБ рдбрд╛рд▓реЗрдВ
codes_collection = db["redeem_codes"]

def generate_code(expiry: str = None):
    """рдирдпрд╛ рд░рд┐рдбреАрдо рдХреЛрдб рдмрдирд╛рдПрдВ рдФрд░ MongoDB рдореЗрдВ рд╕реЗрд╡ рдХрд░реЗрдВ"""
    
    # 6-рдЕрдВрдХреЛрдВ рдХрд╛ рд░реИрдВрдбрдо рдХреЛрдб рдмрдирд╛рдПрдВ
    code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))
    
    # Expiry Time рд╕реЗрдЯ рдХрд░реЗрдВ
    if expiry == "1h":
        expiry_time = datetime.utcnow() + timedelta(hours=1)
    elif expiry == "1d":
        expiry_time = datetime.utcnow() + timedelta(days=1)
    else:
        expiry_time = None  # рдХреЛрдИ рдПрдХреНрд╕рдкрд╛рдпрд░реА рдирд╣реАрдВ

    # MongoDB рдореЗрдВ рдХреЛрдб рд╕реЗрд╡ рдХрд░реЗрдВ
    codes_collection.insert_one({"code": code, "expiry": expiry_time, "redeemed": False})
    
    if expiry_time:
        return f"тЬЕ рдирдпрд╛ рд░рд┐рдбреАрдо рдХреЛрдб: `{code}`\nтП│ рдПрдХреНрд╕рдкрд╛рдпрд░реА: {expiry_time.strftime('%Y-%m-%d %H:%M:%S')} UTC"
    else:
        return f"тЬЕ рдирдпрд╛ рд░рд┐рдбреАрдо рдХреЛрдб: `{code}`\nЁЯФУ рдХреЛрдИ рдПрдХреНрд╕рдкрд╛рдпрд░реА рдирд╣реАрдВ"

def redeem_code(user_id: int, code: str):
    """рдХреЛрдб рдХреЛ рд░рд┐рдбреАрдо рдХрд░реЗрдВ рдФрд░ рдПрдХреНрд╕рдкрд╛рдпрд░реА рдЪреЗрдХ рдХрд░реЗрдВ"""
    
    # MongoDB рд╕реЗ рдХреЛрдб рдЦреЛрдЬреЗрдВ
    code_data = codes_collection.find_one({"code": code})

    if not code_data:
        return "тЭМ рдХреЛрдб рдЕрдорд╛рдиреНрдп рд╣реИ!"
    
    if code_data["redeemed"]:
        return "тЭМ рдпрд╣ рдХреЛрдб рдкрд╣рд▓реЗ рд╣реА рдЙрдкрдпреЛрдЧ рдХрд┐рдпрд╛ рдЬрд╛ рдЪреБрдХрд╛ рд╣реИ!"

    if code_data["expiry"] and datetime.utcnow() > code_data["expiry"]:
        # рдПрдХреНрд╕рдкрд╛рдпрд░реНрдб рдХреЛрдб рдХреЛ рдбрд┐рд▓реАрдЯ рдХрд░реЗрдВ
        codes_collection.delete_one({"code": code})
        return "тЭМ рдпрд╣ рдХреЛрдб рдПрдХреНрд╕рдкрд╛рдпрд░ рд╣реЛ рдЪреБрдХрд╛ рд╣реИ!"

    # рдХреЛрдб рдХреЛ рд░рд┐рдбреАрдо рдХрд░реЗрдВ
    codes_collection.update_one({"code": code}, {"$set": {"redeemed": True}})
    return "тЬЕ рдЖрдкрдХрд╛ рдХреЛрдб рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд░рд┐рдбреАрдо рд╣реЛ рдЧрдпрд╛!"

def delete_expired_codes():
    """рдПрдХреНрд╕рдкрд╛рдпрд░реА рдЯрд╛рдЗрдо рдХреЗ рдмрд╛рдж рдХреЛрдбреНрд╕ рдХреЛ рд╣рдЯрд╛рдПрдВ"""
    now = datetime.utcnow()
    result = codes_collection.delete_many({"expiry": {"$lt": now}})
    return f"ЁЯЧСя╕П {result.deleted_count} рдПрдХреНрд╕рдкрд╛рдпрд░реНрдб рдХреЛрдбреНрд╕ рдбрд┐рд▓реАрдЯ рдХрд┐рдП рдЧрдП!"